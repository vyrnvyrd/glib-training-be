// <auto-generated />
using System;
using Garuda.Database.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Garuda.Host.Migrations
{
    [DbContext(typeof(StorageContext))]
    [Migration("20220808030420_AddColumnForCustomerInfoInUser")]
    partial class AddColumnForCustomerInfoInUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Garuda.Database.Framework.Data.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Action")
                        .HasColumnType("text")
                        .HasColumnName("action");

                    b.Property<string>("ClassName")
                        .HasColumnType("text")
                        .HasColumnName("class_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("NewValue")
                        .HasColumnType("text")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("text")
                        .HasColumnName("old_value");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text")
                        .HasColumnName("updated_by");

                    b.HasKey("Id");

                    b.ToTable("audit_logs");
                });

            modelBuilder.Entity("Garuda.Modules.BookLibrary.Models.Datas.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Author")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Cover")
                        .HasColumnType("text");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Genre")
                        .HasColumnType("text");

                    b.Property<DateTime>("ReleasedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Synopsis")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Title")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("TotalPages")
                        .HasColumnType("integer");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Data.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("IconClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Level")
                        .HasMaxLength(500)
                        .HasColumnType("integer");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("Slug")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8f735cdf-bd01-4ae3-89c6-b122bdd59b8b"),
                            Code = "dash",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 507, DateTimeKind.Local).AddTicks(9741),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Dashboard",
                            DisplayOrder = 0,
                            IconClass = "icon-home",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "/Dashboard",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("293f7746-eac8-4bd1-9550-87347467ebd2"),
                            Code = "cr",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(360),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Create",
                            DisplayOrder = 1,
                            IconClass = "icon-add",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            Code = "cp",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(369),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Create Plan",
                            DisplayOrder = 0,
                            IconClass = "",
                            Level = 1,
                            ParentId = new Guid("293f7746-eac8-4bd1-9550-87347467ebd2"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("9f54020e-85c1-46fb-9da3-c6150a3e327b"),
                            Code = "cp",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(376),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Plan Mine Closure",
                            DisplayOrder = 0,
                            IconClass = "",
                            Level = 2,
                            ParentId = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            Slug = "/CreatePlanMineClosure",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("08d3fe57-51f3-40d7-8cbc-75899871abf2"),
                            Code = "cp",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(381),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Plan Operation",
                            DisplayOrder = 1,
                            IconClass = "",
                            Level = 2,
                            ParentId = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            Slug = "/CreatePlanOperation",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("77af2b15-1d76-489c-89b7-8f003d19acff"),
                            Code = "cp",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(392),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Plan Contractor",
                            DisplayOrder = 2,
                            IconClass = "",
                            Level = 2,
                            ParentId = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            Slug = "/CreatePlanContractor",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6906ffec-78d6-4631-977d-b0375351fb70"),
                            Code = "cr",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(402),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Create Actual",
                            DisplayOrder = 1,
                            IconClass = "icon-add",
                            Level = 1,
                            ParentId = new Guid("293f7746-eac8-4bd1-9550-87347467ebd2"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("77118193-d70c-4e36-97a0-683b9e825569"),
                            Code = "act",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(454),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "My Activity",
                            DisplayOrder = 2,
                            IconClass = "icon-notes",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7f2302be-efd5-43f1-b6c9-8e8886c8460c"),
                            Code = "doc",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(459),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "My Document",
                            DisplayOrder = 3,
                            IconClass = "icon-file",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("d73f2bc0-8b65-46f2-9e06-9bd52e990283"),
                            Code = "doclib",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(464),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Document Library",
                            DisplayOrder = 4,
                            IconClass = "icon-search",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("806f809b-cdd3-4591-a553-085ac97037b9"),
                            Code = "vplan",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(469),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "View Plan",
                            DisplayOrder = 0,
                            IconClass = "",
                            Level = 1,
                            ParentId = new Guid("d73f2bc0-8b65-46f2-9e06-9bd52e990283"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("049dde67-5798-4e74-8fff-503400311161"),
                            Code = "vact",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(475),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "View Actual",
                            DisplayOrder = 1,
                            IconClass = "",
                            Level = 1,
                            ParentId = new Guid("d73f2bc0-8b65-46f2-9e06-9bd52e990283"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f0663ca2-ffb8-42c2-b022-38479c7c84af"),
                            Code = "set",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(480),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Profile",
                            DisplayOrder = 5,
                            IconClass = "icon-cog-outline",
                            Level = 0,
                            ParentId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Slug = "",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5026c85e-04f4-4d65-9fd2-bff26ad90013"),
                            Code = "user",
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 508, DateTimeKind.Local).AddTicks(486),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "User Management",
                            DisplayOrder = 0,
                            IconClass = "icon-user",
                            Level = 1,
                            ParentId = new Guid("f0663ca2-ffb8-42c2-b022-38479c7c84af"),
                            Slug = "/IndexUser",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 510, DateTimeKind.Local).AddTicks(4223),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Administrator",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 510, DateTimeKind.Local).AddTicks(4246),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "QPB Administrator",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fa997ce4-5b76-447c-9b08-5f448f185ad3"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 510, DateTimeKind.Local).AddTicks(4251),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Mine Head",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.GroupMenuPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("CanCreate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanSubmit")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanUpdate")
                        .HasColumnType("boolean");

                    b.Property<bool>("CanView")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MenuId");

                    b.ToTable("GroupMenuPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64f03301-c574-46c2-b1e6-2922eaaa826a"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(86),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("8f735cdf-bd01-4ae3-89c6-b122bdd59b8b"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b4ab5dec-b541-4a99-b998-511d093207cd"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(118),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("8f735cdf-bd01-4ae3-89c6-b122bdd59b8b"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2259be39-3027-4aaf-b7d4-6a5d7f196c0d"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(126),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("293f7746-eac8-4bd1-9550-87347467ebd2"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6607d37e-dc2b-4ea8-8de5-32bbf7d1ccd3"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(186),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("293f7746-eac8-4bd1-9550-87347467ebd2"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("fd27fabc-218a-4163-89ee-469f38611af3"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(194),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("7c5ab91a-5a1b-4b52-a643-ade5b42f862c"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(200),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("f1e6588e-ef55-4fcd-9be2-ad71fce2e678"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("246857d8-d23b-4287-9e70-bd3101ec4df8"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(208),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("9f54020e-85c1-46fb-9da3-c6150a3e327b"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("82ace0f9-6a4f-4a53-b524-306caf258b6d"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(215),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("08d3fe57-51f3-40d7-8cbc-75899871abf2"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("2144142f-4fea-4e39-92c6-75097b01cd80"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(223),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("77af2b15-1d76-489c-89b7-8f003d19acff"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("cf5aa817-c923-40ea-9394-de0da2335866"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(231),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("9f54020e-85c1-46fb-9da3-c6150a3e327b"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("77b62aa0-5794-41fb-9005-a197c50385e0"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(236),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("08d3fe57-51f3-40d7-8cbc-75899871abf2"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("db5c3fdc-6d75-42a5-97bb-2a0edfbfe45a"),
                            CanCreate = true,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(242),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("77af2b15-1d76-489c-89b7-8f003d19acff"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("07e87c49-180f-4f00-99e2-7322c0638a2d"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(250),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("f0663ca2-ffb8-42c2-b022-38479c7c84af"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("e59e9251-d424-4ae1-b0c7-bdd01a4a1fee"),
                            CanCreate = false,
                            CanDelete = false,
                            CanSubmit = false,
                            CanUpdate = false,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(257),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("f0663ca2-ffb8-42c2-b022-38479c7c84af"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("702e4653-2abc-41f1-86f5-c1543ab7d585"),
                            CanCreate = true,
                            CanDelete = true,
                            CanSubmit = false,
                            CanUpdate = true,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(264),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            MenuId = new Guid("5026c85e-04f4-4d65-9fd2-bff26ad90013"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("6d8a282b-2728-4c07-a28f-93ac06977ef6"),
                            CanCreate = true,
                            CanDelete = true,
                            CanSubmit = false,
                            CanUpdate = true,
                            CanView = true,
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 518, DateTimeKind.Local).AddTicks(272),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            MenuId = new Guid("5026c85e-04f4-4d65-9fd2-bff26ad90013"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Scheme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Schemes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("045a0ec7-04e9-4136-b0a6-5ef1d529ea92"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 519, DateTimeKind.Local).AddTicks(2877),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Contractor",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("77c9ef27-2f65-473e-8b61-ff4ce9693655"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 519, DateTimeKind.Local).AddTicks(2893),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Mine Closure",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 519, DateTimeKind.Local).AddTicks(2898),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operation",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.SchemeUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("SchemeId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("SchemeId");

                    b.HasIndex("UnitId");

                    b.ToTable("SchemeUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d086072c-4a06-402e-a735-11d5b034a866"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("045a0ec7-04e9-4136-b0a6-5ef1d529ea92"),
                            UnitId = new Guid("21cf75f0-c7c6-427b-a392-fce59cb50bc6"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("8e4b6643-4b95-4051-9dc8-5fc2a2ab727f"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("77c9ef27-2f65-473e-8b61-ff4ce9693655"),
                            UnitId = new Guid("5b11f06f-426b-44f1-9023-170cb85797e3"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b61b1d7d-ee3c-4eae-af2b-49c0e2415449"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            UnitId = new Guid("80f560d6-1f61-460e-95ac-ea5b9c001df5"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("51f35363-b1ef-4fbd-9021-224cf52c3bd3"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            UnitId = new Guid("29ec8ffc-c508-4dd5-8c3d-4675ed6af4cc"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("c28fc63a-ab3b-4cfa-b246-243f35ffc552"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            UnitId = new Guid("b1f30d87-b5a6-4fdb-9f72-76f06db7f7a5"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("842147f1-c5fa-40ce-96f0-561dda8d7ad9"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            UnitId = new Guid("23ebbe54-45aa-4435-935d-6fad0d650b86"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("21fb0208-60a4-4827-8451-c597b54cad74"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchemeId = new Guid("5db13726-605c-4a00-b1c4-d6ce3ba507b3"),
                            UnitId = new Guid("af82ee9b-e754-4cb5-ae58-213419183dcf"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80f560d6-1f61-460e-95ac-ea5b9c001df5"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8425),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "IMM",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("23ebbe54-45aa-4435-935d-6fad0d650b86"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8446),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Melak",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("b1f30d87-b5a6-4fdb-9f72-76f06db7f7a5"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8451),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "KTD EMB",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("21cf75f0-c7c6-427b-a392-fce59cb50bc6"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8455),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "TRUST",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("29ec8ffc-c508-4dd5-8c3d-4675ed6af4cc"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8459),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "JBG",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("5b11f06f-426b-44f1-9023-170cb85797e3"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8463),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "KTD TDM",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("af82ee9b-e754-4cb5-ae58-213419183dcf"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 522, DateTimeKind.Local).AddTicks(8467),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "GPK",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PrivacyPolicy")
                        .HasColumnType("text");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(6955),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "system@system.co",
                            Fullname = "System",
                            IsActive = true,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "systemadmin"
                        },
                        new
                        {
                            Id = new Guid("fa3876d9-b8ce-4029-9df6-2e8ee94a3d78"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(7198),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "systemreserve@system.co",
                            Fullname = "System Admin Reserve",
                            IsActive = true,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "systemadminreserve"
                        },
                        new
                        {
                            Id = new Guid("2446aa92-3c84-4072-8c5e-d8c41deac9c4"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(7204),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "rezacodym@gmail.com",
                            Fullname = "Reza Muharam",
                            IsActive = true,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "reza_reza"
                        },
                        new
                        {
                            Id = new Guid("8b3c44cb-244b-4f13-b2a0-22020ae26bc6"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(7210),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "atthoriqgf@gmail.com",
                            Fullname = "Atthoriq",
                            IsActive = true,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "atthoriq_atthoriq"
                        },
                        new
                        {
                            Id = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(7214),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "dermawanto_d@banpuindo.co.id",
                            Fullname = "Dermawanto",
                            IsActive = true,
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "dermawanto_d"
                        },
                        new
                        {
                            Id = new Guid("784d69e6-abc3-47f9-9245-9527d6b2f17c"),
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 524, DateTimeKind.Local).AddTicks(7218),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "vyrnvyrd@gmail.com",
                            Fullname = "Firna Firdiani",
                            IsActive = true,
                            Password = "$2a$11$SVWK9pHVWC25oLXYClLeh.KB4KS4KdyrvYwqNOn8XAMQqRl7NXgm.",
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Username = "firnafird"
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGroups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5c455f1-f239-4f29-bebd-8bc4239e15fb"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8437),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("81314787-537b-474f-999a-9152c9703bbb")
                        },
                        new
                        {
                            Id = new Guid("ec211d37-2400-4877-8696-62ac17faeecb"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8467),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("2446aa92-3c84-4072-8c5e-d8c41deac9c4")
                        },
                        new
                        {
                            Id = new Guid("f1a56c59-0128-4799-826d-50ce44921cb6"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8474),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("fa997ce4-5b76-447c-9b08-5f448f185ad3"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("2446aa92-3c84-4072-8c5e-d8c41deac9c4")
                        },
                        new
                        {
                            Id = new Guid("4b894dac-7e06-4891-8498-6521ba85dcac"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8480),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("8b3c44cb-244b-4f13-b2a0-22020ae26bc6")
                        },
                        new
                        {
                            Id = new Guid("145e7f39-120c-4cdd-baac-fbbd74b72a69"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8486),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("fa997ce4-5b76-447c-9b08-5f448f185ad3"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("8b3c44cb-244b-4f13-b2a0-22020ae26bc6")
                        },
                        new
                        {
                            Id = new Guid("10195c34-4e6d-4795-bbde-bbd17e2c1b0b"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8492),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("fa997ce4-5b76-447c-9b08-5f448f185ad3"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("d050c114-fc5f-45c8-a736-b0cacdfc47e6"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8497),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("1ce881eb-4ae2-4b04-83d9-7062e6cfffd5"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("fe9b8375-2bab-4449-88a1-efe80155054e"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 714, DateTimeKind.Local).AddTicks(8502),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            GroupId = new Guid("9ee09365-b140-4bc0-a5a1-79098ddbeed7"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.UserSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateExpired")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateRevoked")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Jti")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.UserUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.HasIndex("UserId");

                    b.ToTable("UserUnits");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3f3920a-6ac6-4774-9b73-ef58c346e0df"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4000),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("80f560d6-1f61-460e-95ac-ea5b9c001df5"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("8f536667-9dcb-4ec4-96a9-8397b0dbf2c6"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4032),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("23ebbe54-45aa-4435-935d-6fad0d650b86"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("d280a08e-1090-4b71-8e7c-8dc391bddafc"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4039),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("b1f30d87-b5a6-4fdb-9f72-76f06db7f7a5"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("00a5ad59-340c-45cb-b423-51aaab6d4ee8"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4048),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("21cf75f0-c7c6-427b-a392-fce59cb50bc6"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("25ec2241-215e-4d2f-890a-88bad0f4127a"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4055),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("29ec8ffc-c508-4dd5-8c3d-4675ed6af4cc"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("57d4d61b-5814-4f7f-b00f-f5b5a1026908"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4064),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("5b11f06f-426b-44f1-9023-170cb85797e3"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        },
                        new
                        {
                            Id = new Guid("43e29254-3301-4b3c-a53b-2eaddb5aa4c3"),
                            CreatedBy = new Guid("81314787-537b-474f-999a-9152c9703bbb"),
                            CreatedDate = new DateTime(2022, 8, 8, 10, 4, 17, 720, DateTimeKind.Local).AddTicks(4070),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UnitId = new Guid("af82ee9b-e754-4cb5-ae58-213419183dcf"),
                            UpdatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserId = new Guid("b5a93e5d-e159-4c69-b90d-ae3239a692d3")
                        });
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.GroupMenuPermission", b =>
                {
                    b.HasOne("Garuda.Modules.Common.Models.Datas.Group", "Group")
                        .WithMany("GroupMenuPermissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garuda.Modules.Common.Models.Data.Menu", "Menu")
                        .WithMany("GroupMenuPermissions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.SchemeUnit", b =>
                {
                    b.HasOne("Garuda.Modules.Common.Models.Datas.Scheme", "Scheme")
                        .WithMany("SchemeUnits")
                        .HasForeignKey("SchemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garuda.Modules.Common.Models.Datas.Unit", "Unit")
                        .WithMany("SchemeUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scheme");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.UserGroup", b =>
                {
                    b.HasOne("Garuda.Modules.Common.Models.Datas.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garuda.Modules.Common.Models.Datas.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.UserUnit", b =>
                {
                    b.HasOne("Garuda.Modules.Common.Models.Datas.Unit", "Unit")
                        .WithMany("UserUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garuda.Modules.Common.Models.Datas.User", "User")
                        .WithMany("UserUnits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Data.Menu", b =>
                {
                    b.Navigation("GroupMenuPermissions");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Group", b =>
                {
                    b.Navigation("GroupMenuPermissions");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Scheme", b =>
                {
                    b.Navigation("SchemeUnits");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.Unit", b =>
                {
                    b.Navigation("SchemeUnits");

                    b.Navigation("UserUnits");
                });

            modelBuilder.Entity("Garuda.Modules.Common.Models.Datas.User", b =>
                {
                    b.Navigation("UserGroups");

                    b.Navigation("UserUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
